;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = build_RP2040
libdeps_dir = /tmp/libdeps

[env]
framework = arduino
build_flags = 
  ; optimize knx stack
  -D SMALL_GROUPOBJECT
  -D USE_BINSEARCH
  ; -D KNX_AUTO_ADAPT
  ; -D KNX_WAIT_FOR_ADDR
  -D MASK_VERSION=0x07B0
  ; use flash directly
  ;flash start at 1.5MiB
  -D KNX_FLASH_SIZE=0x4000
  -D KNX_FLASH_OFFSET=0x180000 
  ; use EEPROM emulation
  ;-D DEBUG_TIMING
  ;-D LOGIC_TRACE
  -Wno-unknown-pragmas 
  -Wno-switch
  ; debug timing in knx stack
monitor_speed = 115200
lib_ldf_mode = deep+
; lib_extra_dirs = 
;   ${PROJECT_DIR}\..
debug_tool = jlink
debug_extra_cmds = 
  set output-radix 16
upload_protocol = jlink

[RP2040]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git#0b2e90a
platform_packages = framework-arduinopico @ https://github.com/earlephilhower/arduino-pico/releases/download/2.7.3/rp2040-2.7.3.zip
board = pico
; Arduino-Pico core
board_build.core = earlephilhower
; board_build.filesystem_size = 0.1m
board_upload.maximum_size = 16777216 ; only valid for UP1 and REG1-HW

build_flags =
  ${env.build_flags}
  -D SERIAL_DEBUG=Serial
  ; -D USE_RP2040_EEPROM_EMULATION
   -D USE_RP2040_LARGE_EEPROM_EMULATION
  -D PIO_FRAMEWORK_ARDUINO_ENABLE_RTTI
  -D LWIP_DONT_PROVIDE_BYTEORDER_FUNCTIONS
  -O0
build_unflags = -Os

lib_deps = 
  adafruit/Adafruit SleepyDog Library @ ^1.4.0
  khoih-prog/TimerInterrupt_Generic @ ^1.13.0
; ;   Wire
; ;   SPI
; build_type = debug
debug_build_flags = -O0 -ggdb3
; debug_build_flags = -ggdb3


[RP2040_develop]
build_flags =
  -D BOARD_SENUP18xTH_V0010
  ;-D DEBUG_DELAY=500
  -D DEBUG_WAIT_FOR_SERIAL=20000
  -D DEBUG_HEARTBEAT_PRIO
  -D OPENKNX_PULSATING_BOOT
  -D DEBUG_LOG
  ;-D TARCE_LOG1=""

[env:build_RP2040]
extends = RP2040
build_flags =
  ${RP2040.build_flags}
  ${RP2040_develop.build_flags}


[env:build_upload_USB_RP2040]
extends = RP2040
build_flags = 
  ${RP2040.build_flags} 
  ${RP2040_develop.build_flags}
upload_protocol = picotool

[env:build_upload_JLINK_RP2040]
extends = RP2040
build_flags = 
  ${RP2040.build_flags} 
  ${RP2040_develop.build_flags}
upload_protocol = jlink


#### Release Environments

[env:release_SEN-UP1-8xTH]
extends = RP2040
build_flags =
  ${RP2040.build_flags}
  -D BOARD_SENUP18xTH_V0010
